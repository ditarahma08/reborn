/* eslint-disable jsx-a11y/no-static-element-interactions */
import React from 'react';
import PropTypes from 'prop-types';
import Star from './Star';

const propTypes = {
  rating: PropTypes.number,
  iconHeight: PropTypes.number,
  iconWidth: PropTypes.number,
};

const RatingStar = (props) => {
  const { rating, iconHeight, iconWidth } = props;

  const generatePercentage = (percentage, index, fullStar) => {
    const zeroStar = Math.ceil(rating) - 1;

    if (index < fullStar) {
      return 'full';
    }
    if (index === zeroStar && percentage > 0 && percentage < 40) {
      return 'quarter';
    }
    if (index === zeroStar && percentage >= 40 && percentage < 60) {
      return 'half';
    }
    if (index === zeroStar && percentage >= 60 && percentage < 100) {
      return 'three-quarter';
    }
    return 'zero';
  };

  const ratings = () => {
    const contents = [];
    for (let i = 0; i < 5; i += 1) {
      const percentageCount = (rating % 1) * 100;
      const fullStarTotal = Math.floor(rating);
      const ratingPercentage = generatePercentage(
        percentageCount,
        i,
        fullStarTotal,
      );

      const ratingProps = {
        percentage: ratingPercentage,
      };

      contents.push(ratingProps);
    }

    return contents;
  };

  return (
    <div className="d-flex">
      {ratings().map((item, index) => (
        <Star
          height={iconHeight}
          width={iconWidth}
          type={item.percentage}
          key={`star-${index}`}
        />
      ))}
    </div>
  );
};

RatingStar.propTypes = propTypes;
export default RatingStar;
