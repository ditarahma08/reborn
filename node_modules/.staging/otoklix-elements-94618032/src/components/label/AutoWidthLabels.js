import React from 'react';
import PropTypes from 'prop-types';
import Badge from '../badge/Badge';

const propTypes = {
  maxChar: PropTypes.number,
  labels: PropTypes.array,
  color: PropTypes.string,
  className: PropTypes.string,
};

const AutoWidthLabels = ({ maxChar = 18, labels, color, className }) => {
  if (labels === undefined || labels.length === 0) {
    return null;
  }

  function funcLengthSum(accum, value) {
    return accum + value.length;
  }

  let countLabels = 100;

  const label = labels.reduce(
    (values, value) => {
      countLabels = values.in.reduce(funcLengthSum, 0);
      if (countLabels + value.length > maxChar) {
        values.out.push(value);
        return values;
      }

      values.in.push(value);
      return values;
    },
    { in: [], out: [] },
  );

  let hoverLabel = '';
  if (label.out.length > 0) {
    hoverLabel = label.out.join(', ');
  }

  return (
    <>
      {label.in.map((value) => (
        <Badge key={value} color={color} size="sm" className={className}>
          {value}
        </Badge>
      ))}
      {label.out.length > 0 && (
        <Badge
          title={hoverLabel}
          key="others"
          color={color}
          size="sm"
          className={className}
        >
          {label.out.length}+
        </Badge>
      )}
    </>
  );
};

AutoWidthLabels.propTypes = propTypes;

export default AutoWidthLabels;
