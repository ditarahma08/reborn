import React from 'react';
import classNames from 'classnames';
import PropTypes from 'prop-types';
import { mapToCssModules } from '../utils';
import Card from './Card';
import CardBody from './CardBody';
import Text from '../text/Text';

const propTypes = {
  image: PropTypes.string,
  imageClassName: PropTypes.string,
  title: PropTypes.string,
  titleClassName: PropTypes.string,
  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  subPrice: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  buttonText: PropTypes.string,
  onCardClick: PropTypes.func,
  showFooter: PropTypes.bool,
  cssModule: PropTypes.object,
  dataAutomationCardService: PropTypes.string,
  categoryLabel: PropTypes.string,
  discountLabel: PropTypes.string,
  showStartPrice: PropTypes.bool,
  imgLazyLoad: PropTypes.bool,
  quantity: PropTypes.string,
  detailPrice: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  isRecommended: PropTypes.string,
  showUsp: PropTypes.bool,
  guaranteeIcon: PropTypes.string,
  discountIcon: PropTypes.string,
  bookmarkIcon: PropTypes.string,
  imgAlt: PropTypes.string,
  dataAutomationCategoryLabel: PropTypes.string,
  dataAutomationTitle: PropTypes.string,
  dataAutomationOriginalPrice: PropTypes.string,
  dataAutomationDiscountPrice: PropTypes.string,
  dataAutomationPrice: PropTypes.string,
  dataAutomationDetailPrice: PropTypes.string,
};

const defaultProps = {
  showFooter: true,
  imgLazyLoad: true,
};

const CardServices = (props) => {
  const {
    image,
    imageClassName,
    title,
    titleClassName,
    price,
    subPrice,
    onCardClick,
    cssModule,
    dataAutomationCardService,
    categoryLabel,
    discountLabel,
    showStartPrice,
    imgLazyLoad,
    quantity,
    detailPrice,
    isRecommended,
    showUsp,
    guaranteeIcon,
    discountIcon,
    bookmarkIcon,
    imgAlt,
    dataAutomationCategoryLabel,
    dataAutomationTitle,
    dataAutomationOriginalPrice,
    dataAutomationDiscountPrice,
    dataAutomationPrice,
    dataAutomationDetailPrice,
    ...attributes
  } = props;

  const classes = mapToCssModules(classNames('card-services pointer'));
  const bodyClasses = mapToCssModules(classNames('d-flex p-3'));
  const titleClasses = mapToCssModules(
    classNames('title', titleClassName),
    cssModule,
  );
  const mainImageClasses = mapToCssModules(
    classNames('main-image', imageClassName),
    cssModule,
  );

  return (
    <Card
      className={classes}
      {...attributes}
      data-automation={dataAutomationCardService || 'card_service'}
      onClick={onCardClick}
    >
      <CardBody className="p-0">
        {isRecommended && (
          <Text
            color="white"
            className={`recommended-ribbon text-xxs ${showUsp && '--active'}`}
          >
            {isRecommended}
          </Text>
        )}

        {showUsp && (
          <div className="usp-top">
            <div className="me-2">
              {bookmarkIcon && (
                <img
                  className="me-1"
                  src={bookmarkIcon}
                  alt="original"
                  height={10}
                />
              )}
              <span>Dijamin Ori</span>
            </div>
            <div className="ms-2">
              {guaranteeIcon && (
                <img
                  className="me-1"
                  src={guaranteeIcon}
                  alt="garansi"
                  height={10}
                />
              )}
              <span>Garansi 14 Hari</span>
            </div>
          </div>
        )}

        <div className={bodyClasses}>
          {image && (
            <div className="box-image">
              <img
                className={mainImageClasses}
                src={image}
                width={120}
                height={120}
                alt={imgAlt}
                loading={imgLazyLoad ? 'lazy' : 'eager'}
              />
            </div>
          )}
          <div className="d-flex flex-column justify-content-between">
            <div className="d-flex flex-column align-items-start">
              <Text
                className="category-label text-xxs text-center mb-1"
                data-automation={dataAutomationCategoryLabel}
              >
                {categoryLabel}
              </Text>
              <Text
                weight="bold"
                className={`${titleClasses}`}
                data-automation={dataAutomationTitle}
              >
                {title}
              </Text>
            </div>

            <div>
              {quantity && (
                <Text color="label" className="text-xxs d-block py-2">
                  {quantity}
                </Text>
              )}

              {showStartPrice && (
                <Text color="label" className="text-xxs d-block my-1">
                  Mulai dari
                </Text>
              )}

              <div>
                <div className="d-flex align-items-center">
                  {subPrice && (
                    <Text
                      color="placeholder"
                      className="text-xxs text-strikethrough d-block"
                      data-automation={dataAutomationOriginalPrice}
                    >
                      {subPrice}
                    </Text>
                  )}
                  {discountLabel && (
                    <Text
                      className="discount-label text-xxs"
                      data-automation={dataAutomationDiscountPrice}
                    >
                      {discountLabel}
                    </Text>
                  )}
                </div>
                <Text
                  color="secondary"
                  weight="bold"
                  className="text-xs d-block"
                  data-automation={dataAutomationPrice}
                >
                  {price}
                </Text>
                {detailPrice && (
                  <Text
                    color="light-light"
                    className="text-xxs d-block"
                    data-automation={dataAutomationDetailPrice}
                  >
                    {detailPrice}
                  </Text>
                )}
              </div>
            </div>
          </div>
        </div>

        {showUsp && (
          <div className="usp-bottom">
            {discountIcon && (
              <img
                className="me-1"
                src={discountIcon}
                alt="diskon"
                height={10}
              />
            )}
            <span>Booking online lebih murah</span>
          </div>
        )}
      </CardBody>
    </Card>
  );
};

CardServices.propTypes = propTypes;
CardServices.defaultProps = defaultProps;
export default CardServices;
