{"version":3,"sources":["../../../src/components/rating/RatingStar.js"],"names":["propTypes","rating","PropTypes","number","iconHeight","iconWidth","RatingStar","props","generatePercentage","percentage","index","fullStar","zeroStar","Math","ceil","ratings","contents","i","percentageCount","fullStarTotal","floor","ratingPercentage","ratingProps","push","map","item"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAEC,sBAAUC,MADF;AAEhBC,EAAAA,UAAU,EAAEF,sBAAUC,MAFN;AAGhBE,EAAAA,SAAS,EAAEH,sBAAUC;AAHL,CAAlB;;AAMA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,MAAQN,MAAR,GAA0CM,KAA1C,CAAQN,MAAR;AAAA,MAAgBG,UAAhB,GAA0CG,KAA1C,CAAgBH,UAAhB;AAAA,MAA4BC,SAA5B,GAA0CE,KAA1C,CAA4BF,SAA5B;;AAEA,MAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,UAAD,EAAaC,KAAb,EAAoBC,QAApB,EAAiC;AAC1D,QAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUb,MAAV,IAAoB,CAArC;;AAEA,QAAIS,KAAK,GAAGC,QAAZ,EAAsB;AACpB,aAAO,MAAP;AACD;;AACD,QAAID,KAAK,KAAKE,QAAV,IAAsBH,UAAU,GAAG,CAAnC,IAAwCA,UAAU,GAAG,EAAzD,EAA6D;AAC3D,aAAO,SAAP;AACD;;AACD,QAAIC,KAAK,KAAKE,QAAV,IAAsBH,UAAU,IAAI,EAApC,IAA0CA,UAAU,GAAG,EAA3D,EAA+D;AAC7D,aAAO,MAAP;AACD;;AACD,QAAIC,KAAK,KAAKE,QAAV,IAAsBH,UAAU,IAAI,EAApC,IAA0CA,UAAU,GAAG,GAA3D,EAAgE;AAC9D,aAAO,eAAP;AACD;;AACD,WAAO,MAAP;AACD,GAhBD;;AAkBA,MAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;AAC7B,UAAMC,eAAe,GAAIjB,MAAM,GAAG,CAAV,GAAe,GAAvC;AACA,UAAMkB,aAAa,GAAGN,IAAI,CAACO,KAAL,CAAWnB,MAAX,CAAtB;AACA,UAAMoB,gBAAgB,GAAGb,kBAAkB,CACzCU,eADyC,EAEzCD,CAFyC,EAGzCE,aAHyC,CAA3C;AAMA,UAAMG,WAAW,GAAG;AAClBb,QAAAA,UAAU,EAAEY;AADM,OAApB;AAIAL,MAAAA,QAAQ,CAACO,IAAT,CAAcD,WAAd;AACD;;AAED,WAAON,QAAP;AACD,GAnBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGD,OAAO,GAAGS,GAAV,CAAc,UAACC,IAAD,EAAOf,KAAP;AAAA,wBACb,gCAAC,gBAAD;AACE,MAAA,MAAM,EAAEN,UADV;AAEE,MAAA,KAAK,EAAEC,SAFT;AAGE,MAAA,IAAI,EAAEoB,IAAI,CAAChB,UAHb;AAIE,MAAA,GAAG,iBAAUC,KAAV;AAJL,MADa;AAAA,GAAd,CADH,CADF;AAYD,CAtDD;;AAwDAJ,UAAU,CAACN,SAAX,GAAuBA,SAAvB;eACeM,U","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Star from './Star';\n\nconst propTypes = {\n  rating: PropTypes.number,\n  iconHeight: PropTypes.number,\n  iconWidth: PropTypes.number,\n};\n\nconst RatingStar = (props) => {\n  const { rating, iconHeight, iconWidth } = props;\n\n  const generatePercentage = (percentage, index, fullStar) => {\n    const zeroStar = Math.ceil(rating) - 1;\n\n    if (index < fullStar) {\n      return 'full';\n    }\n    if (index === zeroStar && percentage > 0 && percentage < 40) {\n      return 'quarter';\n    }\n    if (index === zeroStar && percentage >= 40 && percentage < 60) {\n      return 'half';\n    }\n    if (index === zeroStar && percentage >= 60 && percentage < 100) {\n      return 'three-quarter';\n    }\n    return 'zero';\n  };\n\n  const ratings = () => {\n    const contents = [];\n    for (let i = 0; i < 5; i += 1) {\n      const percentageCount = (rating % 1) * 100;\n      const fullStarTotal = Math.floor(rating);\n      const ratingPercentage = generatePercentage(\n        percentageCount,\n        i,\n        fullStarTotal,\n      );\n\n      const ratingProps = {\n        percentage: ratingPercentage,\n      };\n\n      contents.push(ratingProps);\n    }\n\n    return contents;\n  };\n\n  return (\n    <div className=\"d-flex\">\n      {ratings().map((item, index) => (\n        <Star\n          height={iconHeight}\n          width={iconWidth}\n          type={item.percentage}\n          key={`star-${index}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nRatingStar.propTypes = propTypes;\nexport default RatingStar;\n"],"file":"RatingStar.js"}