"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = require("../utils");

var _Dropdown = _interopRequireDefault(require("../dropdown/Dropdown"));

var _excluded = ["className", "cssModule", "tag", "type", "size", "inputType"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var propTypes = {
  tag: _utils.tagPropType,
  type: _propTypes["default"].bool,
  size: _propTypes["default"].string,
  inputType: _propTypes["default"].string,
  className: _propTypes["default"].string,
  cssModule: _propTypes["default"].object
};
var defaultProps = {
  tag: 'div'
};

var InputGroup = function InputGroup(props) {
  var className = props.className,
      cssModule = props.cssModule,
      Tag = props.tag,
      type = props.type,
      size = props.size,
      inputType = props.inputType,
      attributes = _objectWithoutProperties(props, _excluded);

  var classes = (0, _utils.mapToCssModules)((0, _classnames["default"])(className, inputType ? "input-group-".concat(inputType) : 'input-group', size ? "input-group-".concat(size) : null), cssModule);

  if (props.type === 'dropdown') {
    return /*#__PURE__*/_react["default"].createElement(_Dropdown["default"], _extends({}, attributes, {
      className: classes
    }));
  }

  return /*#__PURE__*/_react["default"].createElement(Tag, _extends({}, attributes, {
    className: classes
  }));
};

InputGroup.propTypes = propTypes;
InputGroup.defaultProps = defaultProps;
var _default = InputGroup;
exports["default"] = _default;
//# sourceMappingURL=InputGroup.js.map