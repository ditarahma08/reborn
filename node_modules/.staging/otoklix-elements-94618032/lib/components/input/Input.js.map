{"version":3,"sources":["../../../src/components/input/Input.js"],"names":["propTypes","children","PropTypes","node","type","string","size","oneOfType","number","bsSize","bgColor","valid","bool","invalid","tag","tagPropType","innerRef","object","func","plaintext","addon","className","cssModule","noBorder","defaultProps","Input","props","getRef","bind","focus","ref","attributes","checkInput","indexOf","isNotaNumber","RegExp","textareaInput","selectInput","rangeInput","Tag","formControlClass","test","classes","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from '../utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  bgColor: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  noBorder: PropTypes.bool,\n};\n\nconst defaultProps = {\n  type: 'text',\n};\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getRef = this.getRef.bind(this);\n    this.focus = this.focus.bind(this);\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n    this.ref = ref;\n  }\n\n  focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  }\n\n  render() {\n    let {\n      className,\n      cssModule,\n      type,\n      bsSize,\n      valid,\n      invalid,\n      bgColor,\n      noBorder,\n      tag,\n      addon,\n      plaintext,\n      innerRef,\n      ...attributes\n    } = this.props;\n\n    const checkInput = ['switch', 'radio', 'checkbox'].indexOf(type) > -1;\n    const isNotaNumber = new RegExp('\\\\D', 'g');\n\n    const textareaInput = type === 'textarea';\n    const selectInput = type === 'select';\n    const rangeInput = type === 'range';\n    let Tag = tag || (selectInput || textareaInput ? type : 'input');\n\n    let formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = `${formControlClass}-plaintext`;\n      Tag = tag || 'input';\n    } else if (rangeInput) {\n      formControlClass = 'form-range';\n    } else if (selectInput) {\n      formControlClass = 'form-select';\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce(\n        'Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.',\n      );\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    const classes = mapToCssModules(\n      classNames(\n        className,\n        invalid && 'is-invalid',\n        valid && 'is-valid',\n        bgColor ? `bg-${bgColor}` : false,\n        bsSize\n          ? selectInput\n            ? `form-select-${bsSize}`\n            : `form-control-${bsSize}`\n          : false,\n        noBorder ? `border-none` : ``,\n        formControlClass,\n      ),\n      cssModule,\n    );\n\n    if (Tag === 'input' || (tag && typeof tag === 'function')) {\n      attributes.type = type === 'switch' ? 'checkbox' : type;\n    }\n\n    if (\n      attributes.children &&\n      !(\n        plaintext ||\n        type === 'select' ||\n        typeof Tag !== 'string' ||\n        Tag === 'select'\n      )\n    ) {\n      warnOnce(\n        `Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`,\n      );\n      delete attributes.children;\n    }\n\n    return (\n      <Tag\n        {...attributes}\n        ref={innerRef}\n        className={classes}\n        aria-invalid={invalid}\n      />\n    );\n  }\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\n\nexport default Input;\n"],"file":"Input.js"}