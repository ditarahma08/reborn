{"version":3,"sources":["../../../src/components/input/InputGroupAddon.js"],"names":["propTypes","tag","tagPropType","addonType","PropTypes","oneOf","isRequired","children","node","className","string","cssModule","object","defaultProps","InputGroupAddon","props","Tag","attributes","classes"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,GAAG,EAAEC,kBADW;AAEhBC,EAAAA,SAAS,EAAEC,sBAAUC,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,EAAsB,OAAtB,CAAhB,EAAgDC,UAF3C;AAGhBC,EAAAA,QAAQ,EAAEH,sBAAUI,IAHJ;AAIhBC,EAAAA,SAAS,EAAEL,sBAAUM,MAJL;AAKhBC,EAAAA,SAAS,EAAEP,sBAAUQ;AALL,CAAlB;AAQA,IAAMC,YAAY,GAAG;AACnBZ,EAAAA,GAAG,EAAE;AADc,CAArB;;AAIA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MACEN,SADF,GAOIM,KAPJ,CACEN,SADF;AAAA,MAEEE,SAFF,GAOII,KAPJ,CAEEJ,SAFF;AAAA,MAGOK,GAHP,GAOID,KAPJ,CAGEd,GAHF;AAAA,MAIEE,SAJF,GAOIY,KAPJ,CAIEZ,SAJF;AAAA,MAKEI,QALF,GAOIQ,KAPJ,CAKER,QALF;AAAA,MAMKU,UANL,4BAOIF,KAPJ;;AASA,MAAMG,OAAO,GAAG,4BACd,4BAAWT,SAAX,wBAAqCN,SAArC,EADc,EAEdQ,SAFc,CAAhB,CAViC,CAejC;;AACA,MAAI,OAAOJ,QAAP,KAAoB,QAAxB,EAAkC;AAChC,wBACE,gCAAC,GAAD,eAASU,UAAT;AAAqB,MAAA,SAAS,EAAEC;AAAhC,qBACE,gCAAC,0BAAD;AAAgB,MAAA,QAAQ,EAAEX;AAA1B,MADF,CADF;AAKD;;AAED,sBAAO,gCAAC,GAAD,eAASU,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,QAAQ,EAAEX;AAAnD,KAAP;AACD,CAzBD;;AA2BAO,eAAe,CAACd,SAAhB,GAA4BA,SAA5B;AACAc,eAAe,CAACD,YAAhB,GAA+BA,YAA/B;eAEeC,e","sourcesContent":["/* eslint react/no-children-prop: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from '../utils';\nimport InputGroupText from './InputGroupText';\n\nconst propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append', 'close']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst InputGroupAddon = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    addonType,\n    children,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(\n    classNames(className, `input-group-${addonType}`),\n    cssModule,\n  );\n\n  // Convenience to assist with transition\n  if (typeof children === 'string') {\n    return (\n      <Tag {...attributes} className={classes}>\n        <InputGroupText children={children} />\n      </Tag>\n    );\n  }\n\n  return <Tag {...attributes} className={classes} children={children} />;\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\n\nexport default InputGroupAddon;\n"],"file":"InputGroupAddon.js"}