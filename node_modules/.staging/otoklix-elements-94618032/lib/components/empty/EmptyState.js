"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("../button/Button"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var propTypes = {
  image: _propTypes["default"].string,
  imgAlt: _propTypes["default"].string,
  imgHeight: _propTypes["default"].number,
  imgWidth: _propTypes["default"].number,
  title: _propTypes["default"].string,
  children: _propTypes["default"].node,
  captionAsTitle: _propTypes["default"].bool,
  titleColor: _propTypes["default"].string,
  mainButtonTitle: _propTypes["default"].string,
  mainButtonColor: _propTypes["default"].string,
  mainButtonOutline: _propTypes["default"].bool,
  onMainButtonClick: _propTypes["default"].func,
  secondaryButtonTitle: _propTypes["default"].string,
  secondaryButtonColor: _propTypes["default"].string,
  secondaryButtonOutline: _propTypes["default"].bool,
  onSecondaryButtonClick: _propTypes["default"].func,
  dataAutoMainButton: _propTypes["default"].string,
  dataAutoSecButton: _propTypes["default"].string,
  dataAutoContainer: _propTypes["default"].string
};
var defaultProps = {
  titleColor: 'dark',
  secondaryButtonColor: 'subtle',
  dataAutoMainButton: 'empty_state_button_main',
  dataAutoSecButton: 'empty_state_button_second',
  dataAutoContainer: 'empty_state_container'
};

var EmptyState = function EmptyState(props) {
  var image = props.image,
      imgAlt = props.imgAlt,
      imgHeight = props.imgHeight,
      imgWidth = props.imgWidth,
      title = props.title,
      titleColor = props.titleColor,
      children = props.children,
      captionAsTitle = props.captionAsTitle,
      mainButtonTitle = props.mainButtonTitle,
      mainButtonColor = props.mainButtonColor,
      mainButtonOutline = props.mainButtonOutline,
      onMainButtonClick = props.onMainButtonClick,
      secondaryButtonTitle = props.secondaryButtonTitle,
      secondaryButtonColor = props.secondaryButtonColor,
      secondaryButtonOutline = props.secondaryButtonOutline,
      onSecondaryButtonClick = props.onSecondaryButtonClick,
      dataAutoMainButton = props.dataAutoMainButton,
      dataAutoSecButton = props.dataAutoSecButton,
      dataAutoContainer = props.dataAutoContainer;
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "empty-state-container",
    "data-automation": dataAutoContainer
  }, image && /*#__PURE__*/_react["default"].createElement("img", {
    className: "image",
    src: image,
    alt: imgAlt,
    height: imgHeight,
    width: imgWidth,
    loading: "lazy"
  }), title && /*#__PURE__*/_react["default"].createElement("span", {
    className: "title text-".concat(titleColor)
  }, title), /*#__PURE__*/_react["default"].createElement("div", {
    className: "".concat(captionAsTitle ? 'title' : 'caption', " text-dark")
  }, children), /*#__PURE__*/_react["default"].createElement("div", {
    className: "footer"
  }, mainButtonTitle && /*#__PURE__*/_react["default"].createElement(_Button["default"], {
    "data-automation": dataAutoMainButton,
    className: "button",
    size: "sm",
    color: mainButtonColor,
    outline: mainButtonOutline,
    block: !secondaryButtonTitle,
    onClick: onMainButtonClick
  }, mainButtonTitle), secondaryButtonTitle && /*#__PURE__*/_react["default"].createElement(_Button["default"], {
    "data-automation": dataAutoSecButton,
    className: "button",
    size: "sm",
    color: secondaryButtonColor,
    outline: secondaryButtonOutline,
    onClick: onSecondaryButtonClick
  }, secondaryButtonTitle)));
};

EmptyState.propTypes = propTypes;
EmptyState.defaultProps = defaultProps;
var _default = EmptyState;
exports["default"] = _default;
//# sourceMappingURL=EmptyState.js.map