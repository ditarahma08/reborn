{"version":3,"sources":["../../../src/components/col/Col.js"],"names":["colWidths","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","tagPropType","xs","sm","md","lg","xl","xxl","auto","relative","absolute","className","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","colClasses","forEach","i","columnProp","colSizeInterfix","colClass","push","length","classes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from '../utils';\n\nconst colWidths = ['auto', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nconst stringOrNumberProp = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string,\n]);\n\nconst columnProps = PropTypes.oneOfType([\n  PropTypes.bool,\n  PropTypes.number,\n  PropTypes.string,\n  PropTypes.shape({\n    size: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    order: stringOrNumberProp,\n    offset: stringOrNumberProp,\n  }),\n]);\n\nconst propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  xxl: columnProps,\n  auto: columnProps,\n  relative: PropTypes.bool,\n  absolute: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  widths: colWidths,\n};\n\nconst getColumnSizeClass = (isXs, colWidth, colSize) => {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : `col-${colWidth}`;\n  }\n  if (colSize === 'auto') {\n    return isXs ? 'col-auto' : `col-${colWidth}-auto`;\n  }\n\n  return isXs ? `col-${colSize}` : `col-${colWidth}-${colSize}`;\n};\n\nconst Col = (props) => {\n  const {\n    className,\n    cssModule,\n    widths,\n    relative,\n    absolute,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const colClasses = [];\n\n  widths.forEach((colWidth, i) => {\n    let columnProp = props[colWidth];\n\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    const isXs = !i;\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      const colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      colClasses.push(\n        mapToCssModules(\n          classNames({\n            [colClass]: columnProp.size || columnProp.size === '',\n            [`order${colSizeInterfix}${columnProp.order}`]:\n              columnProp.order || columnProp.order === 0,\n            [`offset${colSizeInterfix}${columnProp.offset}`]:\n              columnProp.offset || columnProp.offset === 0,\n          }),\n          cssModule,\n        ),\n      );\n    } else {\n      const colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  const classes = mapToCssModules(\n    classNames(\n      relative ? 'position-relative' : false,\n      absolute ? 'position-absolute' : false,\n      className,\n      colClasses,\n    ),\n    cssModule,\n  );\n\n  return <Tag {...attributes} className={classes} />;\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\n\nexport default Col;\n"],"file":"Col.js"}