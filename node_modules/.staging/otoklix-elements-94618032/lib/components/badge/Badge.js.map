{"version":3,"sources":["../../../src/components/badge/Badge.js"],"names":["propTypes","color","PropTypes","string","pill","bool","size","tag","tagPropType","fontNormal","fontColor","innerRef","oneOfType","object","func","children","node","className","cssModule","defaultProps","Badge","props","Tag","attributes","classes","href"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEC,sBAAUC,MADD;AAEhBC,EAAAA,IAAI,EAAEF,sBAAUG,IAFA;AAGhBC,EAAAA,IAAI,EAAEJ,sBAAUC,MAHA;AAIhBI,EAAAA,GAAG,EAAEC,kBAJW;AAKhBC,EAAAA,UAAU,EAAEP,sBAAUG,IALN;AAMhBK,EAAAA,SAAS,EAAER,sBAAUC,MANL;AAOhBQ,EAAAA,QAAQ,EAAET,sBAAUU,SAAV,CAAoB,CAC5BV,sBAAUW,MADkB,EAE5BX,sBAAUY,IAFkB,EAG5BZ,sBAAUC,MAHkB,CAApB,CAPM;AAYhBY,EAAAA,QAAQ,EAAEb,sBAAUc,IAZJ;AAahBC,EAAAA,SAAS,EAAEf,sBAAUC,MAbL;AAchBe,EAAAA,SAAS,EAAEhB,sBAAUW;AAdL,CAAlB;AAiBA,IAAMM,YAAY,GAAG;AACnBlB,EAAAA,KAAK,EAAE,WADY;AAEnBG,EAAAA,IAAI,EAAE,KAFa;AAGnBE,EAAAA,IAAI,EAAE,IAHa;AAInBC,EAAAA,GAAG,EAAE;AAJc,CAArB;;AAOA,IAAMa,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,MACEJ,SADF,GAWII,KAXJ,CACEJ,SADF;AAAA,MAEEC,SAFF,GAWIG,KAXJ,CAEEH,SAFF;AAAA,MAGEjB,KAHF,GAWIoB,KAXJ,CAGEpB,KAHF;AAAA,MAIEK,IAJF,GAWIe,KAXJ,CAIEf,IAJF;AAAA,MAKEK,QALF,GAWIU,KAXJ,CAKEV,QALF;AAAA,MAMEF,UANF,GAWIY,KAXJ,CAMEZ,UANF;AAAA,MAOEC,SAPF,GAWIW,KAXJ,CAOEX,SAPF;AAAA,MAQEN,IARF,GAWIiB,KAXJ,CAQEjB,IARF;AAAA,MASOkB,GATP,GAWID,KAXJ,CASEd,GATF;AAAA,MAUKgB,UAVL,4BAWIF,KAXJ;;AAaA,MAAMG,OAAO,GAAG,4BACd,4BACEP,SADF,EAEE,OAFF,eAGQhB,KAHR,GAIEQ,UAAU,GAAG,WAAH,GAAiB,KAJ7B,EAKEC,SAAS,kBAAWA,SAAX,IAAyB,KALpC,EAMEJ,IAAI,mBAAYA,IAAZ,IAAqB,KAN3B,EAOEF,IAAI,GAAG,cAAH,GAAoB,KAP1B,CADc,EAUdc,SAVc,CAAhB;;AAaA,MAAIK,UAAU,CAACE,IAAX,IAAmBH,GAAG,KAAK,MAA/B,EAAuC;AACrCA,IAAAA,GAAG,GAAG,GAAN;AACD;;AAED,sBAAO,gCAAC,GAAD,eAASC,UAAT;AAAqB,IAAA,SAAS,EAAEC,OAAhC;AAAyC,IAAA,GAAG,EAAEb;AAA9C,KAAP;AACD,CAhCD;;AAkCAS,KAAK,CAACpB,SAAN,GAAkBA,SAAlB;AACAoB,KAAK,CAACD,YAAN,GAAqBA,YAArB;eAEeC,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from '../utils';\n\nconst propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  size: PropTypes.string,\n  tag: tagPropType,\n  fontNormal: PropTypes.bool,\n  fontColor: PropTypes.string,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  color: 'secondary',\n  pill: false,\n  size: 'md',\n  tag: 'span',\n};\n\nconst Badge = (props) => {\n  let {\n    className,\n    cssModule,\n    color,\n    size,\n    innerRef,\n    fontNormal,\n    fontColor,\n    pill,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(\n    classNames(\n      className,\n      'badge',\n      `bg-${color}`,\n      fontNormal ? 'fw-normal' : false,\n      fontColor ? `text-${fontColor}` : false,\n      size ? `badge-${size}` : false,\n      pill ? 'rounded-pill' : false,\n    ),\n    cssModule,\n  );\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return <Tag {...attributes} className={classes} ref={innerRef} />;\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\n\nexport default Badge;\n"],"file":"Badge.js"}