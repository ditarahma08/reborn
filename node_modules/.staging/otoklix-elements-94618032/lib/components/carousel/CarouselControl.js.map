{"version":3,"sources":["../../../src/components/carousel/CarouselControl.js"],"names":["CarouselControl","props","direction","onClickHandler","cssModule","directionText","className","anchorClasses","iconClasses","screenReaderClasses","cursor","e","preventDefault","propTypes","PropTypes","oneOf","isRequired","func","object","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAQC,SAAR,GACED,KADF,CAAQC,SAAR;AAAA,MAAmBC,cAAnB,GACEF,KADF,CAAmBE,cAAnB;AAAA,MAAmCC,SAAnC,GACEH,KADF,CAAmCG,SAAnC;AAAA,MAA8CC,aAA9C,GACEJ,KADF,CAA8CI,aAA9C;AAAA,MAA6DC,SAA7D,GACEL,KADF,CAA6DK,SAA7D;AAGA,MAAMC,aAAa,GAAG,4BACpB,4BAAWD,SAAX,6BAA0CJ,SAA1C,EADoB,EAEpBE,SAFoB,CAAtB;AAKA,MAAMI,WAAW,GAAG,4BAClB,uDAA+BN,SAA/B,WADkB,EAElBE,SAFkB,CAApB;AAKA,MAAMK,mBAAmB,GAAG,4BAAgB,4BAAW,SAAX,CAAhB,EAAuCL,SAAvC,CAA5B;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACE,MAAA,SAAS,EAAEG,aADb;AAEE,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAC,GAJX;AAKE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdA,QAAAA,CAAC,CAACC,cAAF;AACAT,QAAAA,cAAc;AACf;AARH,oBAUE;AAAM,MAAA,SAAS,EAAEK,WAAjB;AAA8B,qBAAY;AAA1C,MAVF,eAWE;AAAM,MAAA,SAAS,EAAEC;AAAjB,OAAuCJ,aAAa,IAAIH,SAAxD,CAXF;AALF;AAmBD,CAnCD;;AAqCAF,eAAe,CAACa,SAAhB,GAA4B;AAC1BX,EAAAA,SAAS,EAAEY,sBAAUC,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,CAAhB,EAAkCC,UADnB;AAE1Bb,EAAAA,cAAc,EAAEW,sBAAUG,IAAV,CAAeD,UAFL;AAG1BZ,EAAAA,SAAS,EAAEU,sBAAUI,MAHK;AAI1Bb,EAAAA,aAAa,EAAES,sBAAUK,MAJC;AAK1Bb,EAAAA,SAAS,EAAEQ,sBAAUK;AALK,CAA5B;eAQenB,e","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from '../utils';\n\nconst CarouselControl = (props) => {\n  const { direction, onClickHandler, cssModule, directionText, className } =\n    props;\n\n  const anchorClasses = mapToCssModules(\n    classNames(className, `carousel-control-${direction}`),\n    cssModule,\n  );\n\n  const iconClasses = mapToCssModules(\n    classNames(`carousel-control-${direction}-icon`),\n    cssModule,\n  );\n\n  const screenReaderClasses = mapToCssModules(classNames('sr-only'), cssModule);\n\n  return (\n    // We need to disable this linting rule to use an `<a>` instead of\n    // `<button>` because that's what the Bootstrap examples require:\n    // https://getbootstrap.com/docs/4.5/components/carousel/#with-controls\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={anchorClasses}\n      style={{ cursor: 'pointer' }}\n      role=\"button\"\n      tabIndex=\"0\"\n      onClick={(e) => {\n        e.preventDefault();\n        onClickHandler();\n      }}\n    >\n      <span className={iconClasses} aria-hidden=\"true\" />\n      <span className={screenReaderClasses}>{directionText || direction}</span>\n    </a>\n  );\n};\n\nCarouselControl.propTypes = {\n  direction: PropTypes.oneOf(['prev', 'next']).isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  cssModule: PropTypes.object,\n  directionText: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default CarouselControl;\n"],"file":"CarouselControl.js"}