{"version":3,"sources":["../../../src/components/carousel/CarouselItem.js"],"names":["CarouselItem","props","state","startAnimation","onEnter","bind","onEntering","onExit","onExiting","onExited","node","isAppearing","setState","offsetHeight","dispatchEvent","CustomEvent","isIn","children","cssModule","slide","Tag","tag","className","transitionProps","status","direction","context","isActive","TransitionStatuses","ENTERED","EXITING","directionClassName","ENTERING","orderClassName","itemClasses","React","Component","propTypes","Transition","tagPropType","PropTypes","bool","object","string","defaultProps","timeout","TransitionTimeouts","Carousel","contextTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport {\n  mapToCssModules,\n  TransitionTimeouts,\n  TransitionStatuses,\n  tagPropType,\n} from '../utils';\n\nclass CarouselItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startAnimation: false,\n    };\n\n    this.onEnter = this.onEnter.bind(this);\n    this.onEntering = this.onEntering.bind(this);\n    this.onExit = this.onExit.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onEnter(node, isAppearing) {\n    this.setState({ startAnimation: false });\n    this.props.onEnter(node, isAppearing);\n  }\n\n  onEntering(node, isAppearing) {\n    // getting this variable triggers a reflow\n    const { offsetHeight } = node;\n    this.setState({ startAnimation: true });\n    this.props.onEntering(node, isAppearing);\n    return offsetHeight;\n  }\n\n  onExit(node) {\n    this.setState({ startAnimation: false });\n    this.props.onExit(node);\n  }\n\n  onExiting(node) {\n    this.setState({ startAnimation: true });\n    node.dispatchEvent(new CustomEvent('slide.bs.carousel')); // eslint-disable-line no-undef\n    this.props.onExiting(node);\n  }\n\n  onExited(node) {\n    node.dispatchEvent(new CustomEvent('slid.bs.carousel')); // eslint-disable-line no-undef\n    this.props.onExited(node);\n  }\n\n  render() {\n    const {\n      in: isIn,\n      children,\n      cssModule,\n      slide,\n      tag: Tag,\n      className,\n      ...transitionProps\n    } = this.props;\n\n    return (\n      <Transition\n        {...transitionProps}\n        enter={slide}\n        exit={slide}\n        in={isIn}\n        onEnter={this.onEnter}\n        onEntering={this.onEntering}\n        onExit={this.onExit}\n        onExiting={this.onExiting}\n        onExited={this.onExited}\n      >\n        {(status) => {\n          const { direction } = this.context;\n          const isActive =\n            status === TransitionStatuses.ENTERED ||\n            status === TransitionStatuses.EXITING;\n          const directionClassName =\n            (status === TransitionStatuses.ENTERING ||\n              status === TransitionStatuses.EXITING) &&\n            this.state.startAnimation &&\n            (direction === 'right'\n              ? 'carousel-item-left'\n              : 'carousel-item-right');\n          const orderClassName =\n            status === TransitionStatuses.ENTERING &&\n            (direction === 'right'\n              ? 'carousel-item-next'\n              : 'carousel-item-prev');\n          const itemClasses = mapToCssModules(\n            classNames(\n              className,\n              'carousel-item',\n              isActive && 'active',\n              directionClassName,\n              orderClassName,\n              'text-center',\n            ),\n            cssModule,\n          );\n\n          return <Tag className={itemClasses}>{children}</Tag>;\n        }}\n      </Transition>\n    );\n  }\n}\n\nCarouselItem.propTypes = {\n  ...Transition.propTypes,\n  tag: tagPropType,\n  in: PropTypes.bool,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  slide: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nCarouselItem.defaultProps = {\n  ...Transition.defaultProps,\n  tag: 'div',\n  timeout: TransitionTimeouts.Carousel,\n  slide: true,\n};\n\nCarouselItem.contextTypes = {\n  direction: PropTypes.string,\n};\n\nexport default CarouselItem;\n"],"file":"CarouselItem.js"}