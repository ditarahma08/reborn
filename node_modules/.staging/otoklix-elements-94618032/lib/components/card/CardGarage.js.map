{"version":3,"sources":["../../../src/components/card/CardGarage.js"],"names":["propTypes","title","PropTypes","string","subtitle","verifiedImage","noBorder","bool","hasAdditionalBadge","additionalText","imageRightLink","imageRightClick","func","bodyClassName","subtitleClassName","detailClassName","detailImageLink","detailImageWidth","number","detailButtonTitle","detailButtonClick","cardInfoClassName","toggleImage","toggleImageClick","onEntering","onExiting","cardInfoOpen","any","accordionData","cardExtraInfo","className","buttonClassName","cssModule","object","dataAutomationDetailButton","dataAutomationInfoImg","dataAutomationRightImg","defaultProps","CardGarage","props","attributes","classes","cardInfoClasses","cardDetailClasses","subtitleClasses","bodyClasses","buttonClasses"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from '../utils';\nimport Card from './Card';\nimport CardBody from './CardBody';\nimport CardTitle from './CardTitle';\nimport CardSubtitle from './CardSubtitle';\nimport Tags from '../badge/Tags';\nimport Button from '../button/Button';\nimport Collapse from '../collapse/Collapse';\n\nconst propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  verifiedImage: PropTypes.string,\n  noBorder: PropTypes.bool,\n  hasAdditionalBadge: PropTypes.bool,\n  additionalText: PropTypes.string,\n  imageRightLink: PropTypes.string,\n  imageRightClick: PropTypes.func,\n  bodyClassName: PropTypes.string,\n  subtitleClassName: PropTypes.string,\n  detailClassName: PropTypes.string,\n  detailImageLink: PropTypes.string,\n  detailImageWidth: PropTypes.number,\n  detailButtonTitle: PropTypes.string,\n  detailButtonClick: PropTypes.func,\n  cardInfoClassName: PropTypes.string,\n  toggleImage: PropTypes.string,\n  toggleImageClick: PropTypes.func,\n  onEntering: PropTypes.func,\n  onExiting: PropTypes.func,\n  cardInfoOpen: PropTypes.any,\n  accordionData: PropTypes.any,\n  cardExtraInfo: PropTypes.any,\n  className: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  dataAutomationDetailButton: PropTypes.string,\n  dataAutomationInfoImg: PropTypes.string,\n  dataAutomationRightImg: PropTypes.string,\n};\n\nconst defaultProps = {\n  noBorder: false,\n  detailImageWidth: 200,\n};\n\nconst CardGarage = (props) => {\n  const {\n    title,\n    subtitle,\n    verifiedImage,\n    noBorder,\n    hasAdditionalBadge,\n    additionalText,\n    imageRightLink,\n    imageRightClick,\n    bodyClassName,\n    subtitleClassName,\n    detailClassName,\n    detailImageLink,\n    detailImageWidth,\n    detailButtonTitle,\n    detailButtonClick,\n    cardInfoClassName,\n    toggleImage,\n    toggleImageClick,\n    onEntering,\n    onExiting,\n    cardInfoOpen,\n    accordionData,\n    className,\n    buttonClassName,\n    cssModule,\n    cardExtraInfo,\n    dataAutomationDetailButton,\n    dataAutomationInfoImg,\n    dataAutomationRightImg,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(\n    classNames('card-garage', noBorder ? 'border-0' : false, className),\n    cssModule,\n  );\n\n  const cardInfoClasses = mapToCssModules(\n    classNames('card-info', 'pt-2', 'pb-4', cardInfoClassName),\n  );\n\n  const cardDetailClasses = mapToCssModules(\n    classNames('card-detail', 'pt-3', detailClassName),\n  );\n\n  const subtitleClasses = mapToCssModules(\n    classNames('mb-2', 'text-muted', subtitleClassName),\n  );\n\n  const bodyClasses = mapToCssModules(classNames('pb-4', bodyClassName));\n  const buttonClasses = mapToCssModules(classNames('mt-3', buttonClassName));\n\n  return (\n    <Card className={classes} {...attributes}>\n      <CardBody className={bodyClasses}>\n        {imageRightLink && (\n          <div\n            role=\"button\"\n            aria-hidden=\"true\"\n            onClick={imageRightClick}\n            data-automation={dataAutomationRightImg || 'button_right_img_link'}\n          >\n            <img\n              src={imageRightLink}\n              className=\"edit-pen\"\n              alt=\"icon-right-link\"\n              loading=\"lazy\"\n            />\n          </div>\n        )}\n\n        {title && (\n          <CardTitle tag=\"h5\">\n            {title}{' '}\n            {verifiedImage && (\n              <img\n                src={verifiedImage}\n                className=\"mx-1\"\n                alt=\"icon-verified\"\n                loading=\"lazy\"\n              />\n            )}\n          </CardTitle>\n        )}\n\n        {subtitle && (\n          <CardSubtitle tag=\"h6\" className={subtitleClasses}>\n            {subtitle}\n          </CardSubtitle>\n        )}\n\n        {hasAdditionalBadge ? (\n          <Tags\n            title={additionalText}\n            pill\n            color=\"success-light\"\n            textColor=\"success\"\n            size=\"sm\"\n          />\n        ) : (\n          <br />\n        )}\n\n        <div className={cardDetailClasses}>\n          {detailImageLink && (\n            <img\n              src={detailImageLink}\n              width={detailImageWidth}\n              alt=\"img-car-detail\"\n              loading=\"lazy\"\n            />\n          )}\n          {detailButtonTitle && (\n            <Button\n              className={buttonClasses}\n              onClick={detailButtonClick}\n              outline\n              size=\"sm\"\n              data-automation={dataAutomationDetailButton || 'button_detail'}\n            >\n              {detailButtonTitle}\n            </Button>\n          )}\n        </div>\n      </CardBody>\n      {toggleImage && (\n        <div className={cardInfoClasses}>\n          {cardExtraInfo}\n          <img\n            role=\"presentation\"\n            src={toggleImage}\n            onClick={toggleImageClick}\n            className=\"arrow-collapse\"\n            alt=\"icon-arrow-collapse\"\n            loading=\"lazy\"\n            data-automation={dataAutomationInfoImg || 'icon_info'}\n          />\n\n          <Collapse\n            isOpen={cardInfoOpen}\n            onEntering={onEntering}\n            onExiting={onExiting}\n          >\n            {accordionData}\n          </Collapse>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nCardGarage.propTypes = propTypes;\nCardGarage.defaultProps = defaultProps;\n\nexport default CardGarage;\n"],"file":"CardGarage.js"}